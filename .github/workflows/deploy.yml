# This is the official, recommended workflow for deploying to GitHub Pages
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create Firebase Config File
        run: |
          echo "export const firebaseConfig = {" > firebase-config.js
          echo "  apiKey: '${{ secrets.FIREBASE_API_KEY }}'," >> firebase-config.js
          echo "  authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'," >> firebase-config.js
          echo "  databaseURL: '${{ secrets.FIREBASE_DATABASE_URL }}'," >> firebase-config.js
          echo "  projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> firebase-config.js
          echo "  storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> firebase-config.js
          echo "  messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> firebase-config.js
          echo "  appId: '${{ secrets.FIREBASE_APP_ID }}'," >> firebase-config.js
          echo "  measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'" >> firebase-config.js
          echo "};" >> firebase-config.js
          
      - name: Replace reCAPTCHA Key in HTML
        run: sed -i "s|YOUR_RECAPTCHA_V3_SITE_KEY|${{ secrets.RECAPTCHA_SITE_KEY }}|g" index.html
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload everything from the root directory
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
